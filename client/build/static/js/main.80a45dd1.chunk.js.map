{"version":3,"sources":["redux/reducers/user.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","components/sidebar/SubMenu.js","components/sidebar/SideBar.js","components/content/Content.js","pages/Splash.jsx","redux/actions.js","api/protectedAPI.js","api/index.js","components/Form/index.js","pages/Login/index.jsx","components/DeleteBtn/index.js","components/Jumbotron/index.js","components/Grid/index.js","components/List/index.js","pages/Books.js","pages/Detail.js","pages/NoMatch.js","components/Nav/index.jsx","pages/Signup/index.jsx","pages/itemDetails.js","pages/items.js","pages/rooms.js","pages/about.js","App.js","serviceWorker.js","index.js"],"names":["setUserDetails","jot","JotBrowser","getToken","firstName","getClaim","role","id","initialState","details","rootState","user","userState","combineReducers","state","action","type","payload","tokens","refresh","eject","refreshJot","configureStore","preloadedState","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","SubMenu","props","useState","collapsed","setCollapsed","icon","title","items","NavItem","onClick","className","classNames","NavLink","Collapse","isOpen","navbar","map","item","index","key","tag","Link","to","target","submenus","SideBar","color","toggle","style","vertical","faHome","faBriefcase","faCopy","faImage","faQuestion","faPaperPlane","Container","fluid","children","Splash","Row","Col","Jumbotron","Button","history","push","onLogin","onLogout","getBooks","axiosP","get","getBook","deleteBook","delete","saveBook","bookData","post","getItems","getRooms","getItem","getRoom","deleteItem","saveItem","itemData","axios","create","baseURL","getAuthHeaderAsync","valid","Promise","resolve","makeAuthHeader","token","then","res","data","success","reject","errors","Authorization","interceptors","request","use","config","a","async","source","CancelToken","authHeader","store","dispatch","cancel","cancelToken","headers","signup","newUser","login","credentials","protectedAPI","Input","TextArea","rows","FormBtn","float","marginBottom","ServerError","axiosError","response","errorObj","statusText","status","error","Alert","variant","name","message","schema","yup","username","required","password","connect","Modal","show","onHide","animation","size","aria-labelledby","centered","Header","closeButton","Title","Body","initialValues","validationSchema","onSubmit","values","formikBag","API","setErrors","setStatus","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Form","noValidate","Group","as","controlId","Label","Control","autoComplete","placeholder","onChange","onBlur","value","isInvalid","Feedback","disabled","DeleteBtn","tabIndex","height","clear","paddingTop","paddingBottom","textAlign","split","join","List","ListItem","Books","books","author","synopsis","loadBooks","setState","catch","err","console","log","handleInputChange","event","handleFormSubmit","preventDefault","this","length","book","_id","Component","Detail","match","params","NoMatch","aria-label","Navbar","container","Brand","href","src","alt","lastName","email","min","itemDetails","room","modelNumber","purchaseDate","purchasePrice","purchaseLocation","description","Items","loadItems","e","autocomplete","Rooms","About","location","App","ConnectedPublicRoute","exact","path","component","Login","Signup","ConnectedPrivateRoute","about","rest","setOpen","render","routeProps","Content","pathname","from","Boolean","hostname","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80a45dd1.chunk.js","sourcesContent":["/**\n * Reducers specify how the application's state changes in response to actions sent to the store.\n * Remember that actions only describe what happened, but don't describe how the application's state changes.\n * @see {@link https://redux.js.org/basics/reducers}\n * \n */\n\nimport { Browser as JotBrowser } from 'jwt-jot'\n\nimport { LOGIN, LOGOUT } from \"../actionTypes\";\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOGIN: {\n            new JotBrowser('jwt', action.payload.tokens.user);\n            new JotBrowser('refreshJwt', action.payload.tokens.refresh);\n            return {\n                ...state,\n                details: setUserDetails()\n            };\n        }\n        case LOGOUT: {\n            // remove all tokens from local storage\n            const jot = new JotBrowser('jwt');\n            if (jot.getToken()) jot.eject();\n            const refreshJot = new JotBrowser('refreshJwt');\n            if (refreshJot.getToken()) refreshJot.eject();\n\n            return {\n                ...state,\n                details: setUserDetails()\n            };\n        }\n        default:\n            return {\n                ...state,\n                details: setUserDetails()\n            };\n    }\n}\n\nconst setUserDetails = () => {\n    const jot = new JotBrowser('jwt');\n    return jot.getToken() ?\n        {\n            firstName: jot.getClaim('firstName'),\n            role: jot.getClaim('role'),\n            id: jot.getClaim('sub')\n        } :\n        null;\n}\nexport const initialState = {\n    details: setUserDetails()\n};","/**\n * Reducers specify how the application's state changes in response to actions sent to the store.\n * Remember that actions only describe what happened, but don't describe how the application's state changes.\n * @see {@link https://redux.js.org/basics/reducers}\n * \n * Here we are combinging two reducers into a single root reducer,\n * and also creating a rootState, which will be the initial state passed to the store.\n */\n\n\nimport { combineReducers } from \"redux\";   // @see {@link https://redux.js.org/api/combinereducers/}\nimport user, { initialState as userState } from \"./user\";\n\n\n/**\n * Create correctly setup initial state for root reducer\n */\nexport const rootState = {\n    user: userState\n};\n\n/**\n * Merging our separate reducers into one root reducer\n */\nexport default combineReducers({\n    user\n});","/**\n * Separate file for the declaration of action types, \n * just to keep concerns clean and clear.\n */\nexport const LOGIN  = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';","import { createStore } from \"redux\";\nimport rootReducer, { rootState } from \"./reducers\";\n\n\n/**\n * \n * @see {@link https://redux.js.org/api/createstore}\n */\nfunction configureStore(preloadedState) {\n\n    const store = createStore(\n        rootReducer,\n        preloadedState,\n        // allowing our store to be enhanced by the redux devtools (with which we can do time-travel and state inspection)\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n    // Setting up hot module reloading for our reducers\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\n        module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n    }\n\n    return store\n}\n\nexport default configureStore(rootState);","import React, { useState } from 'react';\nimport  { Collapse, NavItem, NavLink } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport './App.scss';\n\nconst SubMenu = props => {\n  \n  const [collapsed, setCollapsed] = useState(true)\n  const toggleNavbar = () => setCollapsed(!collapsed)\n  const { icon, title, items } = props;\n \n  return (\n    <div>\n      <NavItem onClick={toggleNavbar} className={classNames({'menu-open': !collapsed})}>\n        <NavLink className=\"dropdown-toggle\">\n          <FontAwesomeIcon icon={icon} className=\"mr-2\"/>{title}\n        </NavLink>\n      </NavItem>\n      <Collapse isOpen={!collapsed} navbar className={classNames('items-menu',{'mb-1': !collapsed})}>\n        {items.map((item, index) => (\n            <NavItem key={index} className=\"pl-4\">\n              <NavLink tag={Link} to={item.target}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n            ))}\n      </Collapse>\n    </div>\n  );\n}\n\nexport default SubMenu;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faBriefcase, faPaperPlane, faQuestion, faImage, faCopy } from '@fortawesome/free-solid-svg-icons';\nimport SubMenu from './SubMenu';\nimport { NavItem, NavLink, Nav } from 'reactstrap';\nimport classNames from 'classnames';\nimport {Link} from 'react-router-dom';\nimport './App.scss';\n\n\nconst SideBar = props => (\n    <div className={classNames('sidebar', {'is-open': props.isOpen})}>\n      <div className=\"sidebar-header\">\n        <span color=\"info\" onClick={props.toggle} style={{color: '#fff'}}>&times;</span>\n        <h3>Inventory List</h3>\n      </div>\n      <div className=\"side-menu\">\n        <Nav vertical className=\"list-styled pb-3\">\n          <p>Dashboard</p>\n          <SubMenu title=\"Your Saved Homes\" icon={faHome} items={submenus[0]}/>\n          <NavLink tag={Link} to={'/home'}>\n            </NavLink>\n          <SubMenu title=\"Saved Home\" icon={faHome} items={submenus[1]}/>\n          <NavItem>\n            <NavLink tag={Link} to={'/about'}>\n              <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\"/>About\n            </NavLink>\n          </NavItem>\n          <SubMenu title=\"Pages\" icon={faCopy} items={submenus[1]}/>\n          <NavItem>\n            <NavLink tag={Link} to={'/pages'}>\n              <FontAwesomeIcon icon={faImage} className=\"mr-2\"/>Portfolio\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/faq'}>\n              <FontAwesomeIcon icon={faQuestion} className=\"mr-2\"/>FAQ\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/contact'}>\n              <FontAwesomeIcon icon={faPaperPlane} className=\"mr-2\"/>Contact\n            </NavLink>\n          </NavItem>\n        </Nav>        \n      </div>\n    </div>\n  );\n\n  const submenus = [\n    [\n      {\n        title: \"Your saved homes\",\n        target: \"Home-1\"\n      },\n    {\n      title: \"Second Home\",\n      target: \"Home-2\"\n    },\n    {\n      title: \"Third Home\",\n      target: \"Home-3\"\n    },\n    {\n      title: \"Fourth Home\",\n      target: \"Home-4\"\n    },{\n      title: \"Fifth Home\",\n      target: \"Home-5\"\n    },\n    {\n      title: \"Sixth Home\",\n      target: \"Home-6\"\n    },\n      \n    ],\n    [\n      {\n        title: \"rooms\",\n        target: \"/books\",          \n      },\n      {\n        title: \"Items\",\n        target: \"/items\",        \n      }\n    ]\n  ]\n  \nexport default SideBar;","import React from 'react';\nimport classNames from 'classnames';\nimport { Container } from 'reactstrap';\n// import NavBar from './Navbar';\n// import { Switch, Route } from 'react-router-dom';\n\nexport default props => (\n    <Container fluid className={classNames('content', { 'is-open': props.isOpen })}>\n    {/* <NavBar toggle={props.toggle} /> */}\n        {props.children} \n        {/* <Switch>\n            <Route exact path=\"/\" component={() => \"Hello\"} />\n            <Route exact path=\"/about\" component={() => \"About\"} />\n            <Route exact path=\"/Pages\" component={() => \"Pages\"} />\n            <Route exact path=\"/faq\" component={() => \"FAQ\"} />\n            <Route exact path=\"/contact\" component={() => \"Contact\"} />\n            <Route exact path=\"/Home-1\" component={() => \"Home-1\"} />\n            <Route exact path=\"/Home-2\" component={() => \"Home-2\"} />\n            <Route exact path=\"/Home-3\" component={() => \"Home-3\"} />\n            <Route exact path=\"/Page-1\" component={() => \"Page-1\"} />\n            <Route exact path=\"/Page-2\" component={() => \"Page-2\"} />\n            <Route exact path=\"/page-1\" component={() => \"page-1\"} />\n            <Route exact path=\"/page-2\" component={() => \"page-2\"} />\n            <Route exact path=\"/page-3\" component={() => \"page-3\"} />\n            <Route exact path=\"/page-4\" component={() => \"page-4\"} />\n            <Route exact path=\"/pages/books\" component={() => \"Books\"} />\n            <Route path=\"/books/:id\" component={() => \"Detail\"} />\n            <Route exact path=\"/items\" component={() => \"Item\"} />\n            <Route path=\"/items/:id\" component={() => \"itemDetails\"} />\n        </Switch> */}\n       \n    </Container>\n)","import React from \"react\";\nimport './App.scss';\n\nimport { Button, Col, Row, Container, Jumbotron } from 'react-bootstrap';\n\nexport default function Splash(props) {\n    return (\n        <Container className='container-1'>\n            <Row>\n                <Col >\n                    <Jumbotron fluid className='mt-4'>\n                        <h1 className='text-center'>Want to know what you own?</h1>\n                    </Jumbotron>\n                    <Row className=\"text-center\">\n                        <Col >\n                            <Button \n                            type=\"submit\" \n                            className=\"btn btn-success\" \n                            onClick={() => props.history.push('/signup')}\n                            >Signup</Button>\n                        </Col>\n                        <Col >\n                            <Button \n                            type=\"submit\" \n                            className=\"btn btn-success\"\n                            onClick={() => props.history.push('/login')}\n                            >Login</Button>\n                        </Col>\n                    </Row>\n                    <Jumbotron fluid className='mt-4'>\n                        <h1 className='text-center'>Like us on Facebook!</h1>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    );\n}","import { LOGIN, LOGOUT } from \"./actionTypes\";\n\n/**\n * \n * Actions are payloads of information that send data from your application to your store.\n * They are the only source of information for the store.\n * @see {@link https://redux.js.org/basics/actions}\n */\n\n // Fill in the properties that need to be returned\n // in each action\nexport const onLogin = (tokens) => ({\n    type: LOGIN,\n    payload: {tokens}\n});\n\nexport const onLogout = () => ({\n    type: LOGOUT\n});","import axios from \"axios\";\nimport { Browser as JotBrowser } from 'jwt-jot'\n\nimport store from '../redux/store';\nimport { onLogout } from '../redux/actions';\n\nexport default {\n    // Gets all books\n    getBooks: function () {\n        return axiosP.get(\"/books\");\n    },\n    // Gets the book with the given id\n    getBook: function (id) {\n        return axiosP.get(\"/books/\" + id);\n    },\n    // Deletes the book with the given id\n    deleteBook: function (id) {\n        return axiosP.delete(\"/books/\" + id);\n    },\n    // Saves a book to the database\n    saveBook: function (bookData) {\n        return axiosP.post(\"/books\", bookData);\n    },\n    //–––––––––––––––––––– ITEMS ––––––––––––––––––––––\n    // Gets all items\n    getItems: function () {\n        return axiosP.get(\"/items\");\n    },\n    // Gets all items in room\n    getRooms: function () {\n        return axiosP.get(\"/rooms\");\n    },\n    // Gets the item with the given id\n    getItem: function (id) {\n        return axiosP.get(\"/items/\" + id);\n    },\n     // Gets the room with the given id\n     getRoom: function (id) {\n        return axiosP.get(\"/rooms/\" + id);\n    },\n    // Deletes the item with the given id\n    deleteItem: function (id) {\n        return axiosP.delete(\"/items/\" + id);\n    },\n    // Saves a book to the database\n    saveItem: function (itemData) {\n        return axiosP.post(\"/items\", itemData);\n    }\n\n};\n\n\nconst axiosP = axios.create({\n    baseURL: '/api/protected'\n});\n\n// https://www.npmjs.com/package/axios#interceptors\naxiosP.interceptors.request.use(\n    async function (config) {\n        const source = axios.CancelToken.source();\n        let authHeader;\n        try {\n            authHeader = await getAuthHeaderAsync();\n        } catch (error) {\n            store.dispatch(onLogout());\n            source.cancel(`Request canceled: ${error}`);\n            return { cancelToken: source.token };\n        }\n\n        config.headers = {\n            ...config.headers,\n            ...authHeader\n        }\n\n        return config;\n    }\n);\n\nfunction getAuthHeaderAsync() {\n    const jot = new JotBrowser('jwt');\n\n    if (jot.getToken() && jot.valid()) return Promise.resolve(makeAuthHeader(jot));\n\n    const refreshJot = new JotBrowser('refreshJwt');\n\n    if (!refreshJot.getToken()) return Promise.reject('Refresh token not found on client.');\n    if (!refreshJot.valid()) return Promise.reject('Refresh token not valid on client.');\n\n    return axios.post(\"/api/auth/refresh\", { token: refreshJot.getToken() })\n        .then(res => res.data)\n        .then(data => {\n            if (data.success) {\n                // save new tokens in localstorage\n                new JotBrowser('refreshJwt', data.tokens.refresh);\n                const jot = new JotBrowser('jwt', data.tokens.user);\n                return makeAuthHeader(jot);\n            } else {\n                return Promise.reject(data.errors.token);\n            }\n        });\n}\n\nfunction makeAuthHeader(jot) {\n    return { Authorization: 'Bearer ' + jot.getToken() };\n}","import axios from \"axios\";\n\nimport protectedAPI from './protectedAPI';\n\n\nexport default {\n  signup: function (newUser) {\n    return axios.post(\"/api/auth/signup\", newUser).then(res => res.data);\n  },\n\n  login: function (credentials) {\n    return axios.post(\"/api/auth/login\", credentials).then(res => res.data);\n  },\n  ...protectedAPI\n};\n\n","import React from \"react\";\nimport { Alert } from 'react-bootstrap';\nimport './App.scss';\n// @import \"./variables.scss\";\n\n// import \"moving-app/App.scss\";\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"5\" {...props} />\n\n\n    </div>\n  );\n}\n\n// newRoom()\n//   let rooms = [];\n//   for (let i = 0; i <= this.props.maxValue; i++) {\n//     rooms.push(<option key={i} value={i}>{i}</option>);\n//     //here I will be creating my options dynamically based on\n//     //what props are currently passed to the parent component\n//   }\n//   return rooms;\n\n\n// export function onDropdownSelected(e) {\n//   console.log(\"THE VAL\", e.target.value);\n//   //here you will see the current selected value of the select input\n// }\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n\nexport function ServerError(props) {\n  const { axiosError } = props;\n\n  if (!axiosError || !axiosError.response) return null;\n\n  const { statusText, status } = axiosError.response;\n  let errorObj;\n\n  if (axiosError.response.data.error) {\n    // handle custom error sent back by server\n    errorObj = axiosError.response.data.error;\n  } else {\n    errorObj = axiosError;\n  }\n\n\n  return (\n    <Alert variant='danger'>\n      {status} {statusText}<br />\n      Error Name: {errorObj.name}<br />\n      Error Message: {errorObj.message}\n    </Alert>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Col, Form, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport './App.scss';\nimport { onLogin } from '../../redux/actions'\nimport API from '../../api'\nimport { ServerError } from '../../components/Form';\n\nconst schema = yup.object({\n    username: yup.string().required(),\n    password: yup.string().required()\n});\n\nconst Login = (props) => {\n\n    return <Modal\n        show={true}\n        onHide={() => props.history.push('/')}\n        animation={false}\n        size=\"lg\"\n        aria-labelledby=\"login-form\"\n        centered\n    >\n        <Modal.Header closeButton>\n            <Modal.Title id=\"login-form\">\n                Inventory List Login\n        </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <h5 className=\"card-title\">Login to your inventory list</h5>\n            <Formik\n                initialValues={{ username: '', password: '' }}\n                validationSchema={schema}\n                onSubmit={async (values, formikBag) => {\n                    try {\n                        const data = await API.login(values);\n                        if (data.success) {\n                            props.onLogin(data.tokens);\n                        } else {\n                            formikBag.setErrors(data.errors);\n                        }\n                    } catch (err) {\n                        formikBag.setStatus(err);\n                    }\n                    return;\n                }}\n            >\n                {({\n                    status,\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <ServerError axiosError={status} />\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"username\">\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control\n                                        required\n                                        name='username'\n                                        autoComplete='username'\n                                        placeholder=\"Username\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.username}\n                                        isInvalid={!!errors.username}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.username && touched.username && errors.username}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"Password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        autoComplete='current-password'\n                                        required\n                                        name='password'\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                        isInvalid={!!errors.password}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.password && touched.password && errors.password}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</Button>\n                        </Form>\n                    )}\n            </Formik>\n            <Link className=\"link\" to=\"/signup\">Don't have an account? <span className=\"link-signup\">Signup</span></Link>\n        </Modal.Body>\n    </Modal>;\n\n};\n\nexport default connect(\n    // mapStateToProps\n    null,\n    // mapDispatchToProps\n    { onLogin }\n)(Login);\n\n","import React from \"react\";\nimport \"./App.scss\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗ \n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\nimport './App.scss';\n\nfunction Jumbotron({ children }) {\n  return (\n\n   \n    <div style={{ height: 150, clear: \"none\", paddingTop: 10, paddingBottom: 10, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\n// import './App.scss';\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n// import './App.scss';\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n\nexport function ListRoom({ children }) {\n  return <li className=\"list-group-room\">{children}</li>;\n}","import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\n\nimport './App.scss';\n\nclass Books extends Component {\n  state = {\n    books: [],\n    title: \"\",\n    author: \"\",\n    synopsis: \"\"\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title && this.state.author) {\n      API.saveBook({\n        title: this.state.title,\n        author: this.state.author,\n        synopsis: this.state.synopsis\n      })\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Lets keep a record of your belongings</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"item (required)\"\n              />\n              <Input\n                value={this.state.author}\n                onChange={this.handleInputChange}\n                name=\"author\"\n                placeholder=\"make or model number (required)\"\n              />\n              <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"description and or value (Optional)\"\n              />\n              <FormBtn\n                disabled={!(this.state.author && this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit item\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Homes On My List</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {/* () => instead of function() */}\n                {this.state.books.map((book) => {\n                  return (\n                  <ListItem key={book._id}>\n                    <Link to={\"/books/\" + book._id}>\n                      \n                        {book.title} made by {book.author}\n                      \n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                )})}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../api\";\nimport './App.scss';\n\nclass Detail extends Component {\n  state = {\n    book: {}\n  };\n  // Add code to get the book with an _id equal to the id in the route param\n  // e.g. http://localhost:3000/books/:id\n  // The book id for this route can be accessed using this.props.match.params.id\n\n  componentDidMount() {\n    API.getBook(this.props.match.params.id)\n    .then(res => {     \n      this.setState({book: res.data})\n    });\n  }\n\n  render() {\n    return (\n      <Container fluid className=\"detailstwo\">\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {this.state.book.title} by {this.state.book.author}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <p>{this.state.book.synopsis}</p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <button type=\"submit\" \n                            className=\"btn btn-success\">\n            <Link to=\"/\">← Back to Authors</Link>\n            </button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport './App.scss';\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport { connect } from 'react-redux'\nimport { Button, Navbar, NavItem } from 'react-bootstrap';\nimport { NavLink } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport './App.scss';\n\nimport { onLogout } from '../../redux/actions'\n\nconst Nav = (props) => {\n  return <Navbar className='navbar-expand-lg justify-content-between' navbar=\"true\">\n   <div container=\"navlink\">\n  <Navbar className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to={'/items'}>Home</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/rooms'}>Rooms</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/about'}>About</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/contact'}>Contact</NavLink>\n          </NavItem>\n       </Navbar>\n       </div>\n    <Navbar.Brand className=\"type\" href=\"/\"><img src=\"./images/logo.png\" alt=\"TalliHome Logo\"></img> </Navbar.Brand>\n\n    {\n      props.user ?\n        <Button onClick={props.onLogout}>Logout</Button> :\n        <Link to={\"/login\"}>\n          <Button>Login</Button>\n        </Link>\n    }\n  </Navbar>;\n};\n\nexport default connect(\n  // mapStateToProps\n  state => ({ user: state.user.details }),\n  // mapDispatchToProps\n  { onLogout }\n)(Nav);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Col, Form, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport './App.scss';\nimport { onLogin } from '../../redux/actions'\nimport API from '../../api'\nimport {ServerError} from '../../components/Form';\n\n\nconst schema = yup.object({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    email: yup.string().required().email(),\n    username: yup.string().required().min(3),\n    password: yup.string().required().min(8)\n});\n\n/**\n * \n * @param {*} props \n * \n * autocomplete names\n * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-autocomplete-given-name\n */\nconst Signup = (props) => {\n\n    return <Modal\n        show={true}\n        onHide={() => props.history.push('/')}\n        animation={false}\n        size=\"lg\"\n        aria-labelledby=\"signup-form\"\n        centered\n    >\n        <Modal.Header closeButton>\n            <Modal.Title id=\"signup-form\">\n                Your homes current inventory\n        </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <h5 className=\"card-title\">Signup to create your homes inventory</h5>\n            <Formik\n                initialValues={{ firstName: '', lastName: '', email: '', username:'', password: '' }}\n                validationSchema={schema}\n                onSubmit={async (values, formikBag) => {\n                    try {\n                        const data = await API.signup(values);\n                        if (data.success) {\n                            props.onLogin(data.tokens);\n                        } else {\n                            formikBag.setErrors(data.errors);\n                        }\n                    } catch (err) {\n                        formikBag.setStatus(err);\n                    }\n                    return;\n                }}\n            >\n                {({\n                    status,\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                                                        <ServerError axiosError={status} />\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"signupFirstName\">\n                                    <Form.Label>First name</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='given-name'\n                                        name='firstName'\n                                        type=\"text\"\n                                        placeholder=\"First name\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.firstName}\n                                        isInvalid={!!errors.firstName}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.firstName && touched.firstName && errors.firstName}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"signupLastName\">\n                                    <Form.Label>Last name</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='family-name'\n                                        name='lastName'\n                                        type=\"text\"\n                                        placeholder=\"Last name\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.lastName}\n                                        isInvalid={!!errors.lastName}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.lastName && touched.lastName && errors.lastName}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"signupEmail\">\n                                    <Form.Label>Email address</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='email'\n                                        name='email'\n                                        type=\"email\"\n                                        placeholder=\"Email address\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.email}\n                                        isInvalid={!!errors.email}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.email && touched.email && errors.email}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"username\">\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control\n                                        required\n                                        name='username'\n                                        autoComplete='username'\n                                        placeholder=\"Username\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.username}\n                                        isInvalid={!!errors.username}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.username && touched.username && errors.username}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"Password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='new-password'\n                                        name='password'\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                        isInvalid={!!errors.password}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.password && touched.password && errors.password}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</Button>\n                        </Form>\n                    )}\n            </Formik>\n            <Link className=\"link\" to=\"/login\">Already have an account? <span className=\"link-signup\">Login</span></Link>\n        </Modal.Body>\n    </Modal>;\n\n};\n\nexport default connect(\n    // mapStateToProps\n    null,\n    // mapDispatchToProps\n    { onLogin }\n)(Signup);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../api\";\nimport './App.scss';\n\nclass itemDetails extends Component {\n    state = {\n        item: {}\n    };\n    // Add code to get the item with an _id equal to the id in the route param\n    // e.g. http://localhost:3000/books/:id\n    // The item id for this route can be accessed using this.props.match.params.id\n\n    componentDidMount() {\n        API.getItem(this.props.match.params.id)\n            .then(res => {\n                this.setState({ item: res.data })\n            });\n    }\n\n    render() {\n        return (\n            <Container className=\"details\" fluid>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1>\n                                {this.state.item.name}\n                                <br/> in\n                                <br/> \n                                {this.state.item.room}\n                            </h1>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-10 md-offset-1\">\n                        <article>\n                            <h2>Details</h2>\n                            <h4>Room : {this.state.item.room}</h4>\n                            <h4>Item : {this.state.item.name}</h4>                            \n                            <h4>Model Number : {this.state.item.modelNumber}</h4>\n                            <h4>Purchase Date : {this.state.item.purchaseDate}</h4>\n                            <h4>Purchase Price : ${this.state.item.purchasePrice}</h4>\n                            <h4>Purchase Location : {this.state.item.purchaseLocation}</h4>\n                            <h4>Description : {this.state.item.description}</h4>\n                        </article>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-2\">\n                        <button>\n                        <Link to=\"/\">← Back to Inventory</Link>\n                        </button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default itemDetails;\n","import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport './App.scss';\n\nimport { Form } from 'react-bootstrap';\n\nclass Items extends Component {\n    state = {\n        // MUST MATCH \"itemSeed\" OBJECT IN \"seedDB.js\" file \n        room: \"\",\n        name: [],\n        modelNumber: \"\",\n        purchaseDate: \"\",\n        purchasePrice: \"\",\n        purchaseLocation: \"\",\n        description: \"\",\n\n    };\n\n    componentDidMount() {\n        this.loadItems();\n\n    }\n\n    loadItems = () => {\n        API.getItems()\n            .then(res => {\n                // let roomsDB = res.map(room => {\n                //     return { value: room, display: room }\n                // });\n                this.setState({\n                    items: res.data, name: \"\", room: \"\", description: \"\", purchaseDate: \"\",\n                    purchasePrice: \"\"\n                });\n            })\n            .catch(err => console.log(err));\n    }\n\n\n    deleteItem = id => {\n        API.deleteItem(id)\n            .then(res => this.loadItems())\n            .catch(err => console.log(err));\n    };\n\n    handleChange = (e) => {\n        console.log(e.target.value); // room        \n        this.setState({ [e.target.name]: e.target.value });\n        console.log(this.state.room);\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.name && this.state.room) {\n            API.saveItem({\n                room: this.state.room,\n                name: this.state.name,\n                modelNumber: this.state.modelNumber,\n                purchaseDate: this.state.purchaseDate,\n                purchasePrice: this.state.purchasePrice,\n                purchaseLocation: this.state.purchaseLocation,\n                description: this.state.description\n            })\n                .then(res => this.loadItems())\n                .then(res => this.setState({\n                    room: \"\",\n                    name: [],\n                    modelNumber: \"\",\n                    purchaseDate: \"\",\n                    purchasePrice: \"\",\n                    purchaseLocation: \"\",\n                    description: \"\",\n                }))\n                .catch(err => console.log(err));\n        }\n    };\n\n\n    render() {\n        return (\n            <Container className=\"items\" fluid>\n                <Row>\n                    <Col size=\"md-6\">\n                        <Jumbotron>\n                            <h1>Item Input Form</h1>\n                        </Jumbotron>\n                        <form>\n                        <Form.Label>Create an Item, Choose a Location, Add Details</Form.Label>\n                            <Input\n                                value={this.state.name}\n                                onChange={this.handleInputChange}\n                                name=\"name\"\n                                placeholder=\"Item Name (required)\"\n                                autocomplete=\"off\"\n                            />\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">                                \n                                <Form.Control as=\"select\"\n                                    value={this.state.room}\n                                    onChange={this.handleChange}\n                                    name=\"room\"\n                                    placeholder=\"Room Name (required)\" >\n                                    <option id='0'>Room Name (required)</option>\n                                    <option>Kitchen</option>\n                                    <option>Master Bedroom</option>\n                                    <option>Bedroom 1</option>\n                                    <option>Bedroom 2</option>\n                                    <option>Bedroom 3</option>\n                                    <option>Kitchen</option>\n                                    <option>Living Room</option>\n                                    <option>Dining Room</option>\n                                    <option>Family Room</option>\n                                    <option>Office</option>\n                                    <option>Garage</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Input\n                                value={this.state.modelNumber}\n                                onChange={this.handleInputChange}\n                                name=\"modelNumber\"\n                                placeholder=\"Model / Serial Number\"\n                            />\n                            <Input type=\"date\"\n                                value={this.state.purchaseDate}\n                                onChange={this.handleInputChange}\n                                name=\"purchaseDate\"\n                            />\n                            <Input\n                                value={this.state.purchasePrice}\n                                onChange={this.handleInputChange}\n                                name=\"purchasePrice\"\n                                placeholder=\"Purchase Price\"\n                            />\n                            <Input\n                                value={this.state.purchaseLocation}\n                                onChange={this.handleInputChange}\n                                name=\"purchaseLocation\"\n                                placeholder=\" Purchase Location\"\n                            />\n                            <TextArea\n                                value={this.state.description}\n                                onChange={this.handleInputChange}\n                                name=\"description\"\n                                placeholder=\"Description (required)\"\n                            />\n                            <FormBtn\n                                disabled={!(this.state.name && this.state.room)}\n                                onClick={this.handleFormSubmit}\n                            >\n                                Add Item\n              </FormBtn>\n                        </form>\n                    </Col>\n                    <Col size=\"md-6 sm-12\">\n                        <Jumbotron>\n                            <h1>Item Tracker</h1>\n                        </Jumbotron>\n                        <Form.Label>Choose an Item to see details</Form.Label>\n                        {this.state.items && this.state.items.length ? (\n                            <List>\n                                {this.state.items.map(item => (\n                                    <ListItem key={item._id}>\n                                        <Link to={\"/items/\" + item._id}>\n                                            <strong>\n                                                {item.name} in {item.room}\n                                            </strong>\n                                        </Link>\n                                        <DeleteBtn onClick={() => this.deleteItem(item._id)} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        ) : (\n                                <h3>No Results to Display</h3>\n                            )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\n\nexport default Items;","import React, { Component } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\nimport './App.scss';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass Rooms extends Component {\r\n    state = {\r\n        // MUST MATCH \"itemSeed\" OBJECT IN \"seedDB.js\" file \r\n        room: \"\",\r\n        name: [],       \r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadItems();\r\n\r\n    }\r\n\r\n    loadItems = () => {\r\n        API.getItem(this.props.match.params.id)\r\n            .then(res => {\r\n                // let roomsDB = res.map(room => {\r\n                //     return { value: room, display: room }\r\n                // });\r\n                this.setState({items: res.data})\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    deleteItem = id => {\r\n        API.deleteItem(id)\r\n            .then(res => this.loadItems())\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        console.log(e.target.value); // room        \r\n        this.setState({ [e.target.name]: e.target.value });\r\n        console.log(this.state.room);\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.state.room) {\r\n            API.getRooms({\r\n                room: this.state.room,\r\n                name: this.state.name,\r\n                \r\n            })\r\n                .then(res => this.loadItems())\r\n                .then(res => this.setState({\r\n                    room: \"\",\r\n                }))\r\n                .catch(err => console.log(err));\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"room\" fluid>\r\n                <Row>\r\n                    <Col size=\"md-6\">\r\n                        <Jumbotron>\r\n                            <h1>Pick a Room</h1>\r\n                        </Jumbotron>\r\n                        <form>\r\n                            <Form.Label>Chose a room to see it's contents</Form.Label>\r\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                <Form.Control as=\"select\"\r\n                                    value={this.state.room}\r\n                                    onChange={this.handleChange}\r\n                                    name=\"room\"\r\n                                    placeholder=\"Room Name (required)\" >\r\n                                    <option id='0'>Room Name (required)</option>\r\n                                    <option>Kitchen</option>\r\n                                    <option>Master Bedroom</option>\r\n                                    <option>Bedroom 1</option>\r\n                                    <option>Bedroom 2</option>\r\n                                    <option>Bedroom 3</option>\r\n                                    <option>Kitchen</option>\r\n                                    <option>Living Room</option>\r\n                                    <option>Dining Room</option>\r\n                                    <option>Family Room</option>\r\n                                    <option>Office</option>\r\n                                    <option>Garage</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <FormBtn\r\n                                disabled={!(this.state.room)}\r\n                                onClick={this.handleFormSubmit}\r\n                            >\r\n                                Get Room\r\n              </FormBtn>\r\n                        </form>\r\n                    </Col>\r\n                    <Col size=\"md-6 sm-12\">\r\n                    <Jumbotron>\r\n                            <h1>Item Tracker</h1>\r\n                        </Jumbotron>\r\n                        <Form.Label>Choose an Item to see details</Form.Label>\r\n                        {this.state.items && this.state.items.length ? (\r\n                            <List>\r\n                                {this.state.items.map((item, room) => (\r\n                                    <ListItem key={item._id}>\r\n                                        <Link to={\"/rooms/\" + room._id}>\r\n                                            <strong>\r\n                                                {item.name} in {item.room}\r\n                                            </strong>\r\n                                        </Link>\r\n                                        <DeleteBtn onClick={() => this.deleteItem(item._id)} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        ) : (\r\n                                <h3>No Results to Display</h3>\r\n                            )}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Rooms;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../api\";\nimport './App.scss';\n\nclass About extends Component {\n    state = {\n        item: {}\n    };\n    // Add code to get the item with an _id equal to the id in the route param\n    // e.g. http://localhost:3000/books/:id\n    // The item id for this route can be accessed using this.props.match.params.id\n\n    componentDidMount() {\n        API.getItem(this.props.match.params.id)\n            .then(res => {\n                this.setState({ item: res.data })\n            });\n    }\n\n    render() {\n        return (\n            <Container className=\"details\" fluid>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1>\n                                {this.state.item.name}\n                                <br/> in\n                                <br/> \n                                {this.state.item.location}\n                            </h1>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-10 md-offset-1\">\n                        <article>\n                            <h2>Details</h2>\n                            <h4>Item : {this.state.item.name}</h4>\n                            <h4>Location : {this.state.item.location}</h4>\n                            <h4>Model Number : {this.state.item.modelNumber}</h4>\n                            <h4>Purchase Date : {this.state.item.purchaseDate}</h4>\n                            <h4>Purchase Price : {this.state.item.purchasePrice}</h4>\n                            <h4>Purchase Location : {this.state.item.purchaseLocation}</h4>\n                            <h4>Description : {this.state.item.description}</h4>\n                        </article>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-2\">\n                        <button>\n                        <Link to=\"/\">← Back to Inventory</Link>\n                        </button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default About;","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport SideBar from './components/sidebar/SideBar';\nimport Content from './components/content/Content';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nimport Splash from \"./pages/Splash\";\nimport Login from './pages/Login';\nimport Books from \"./pages/Books\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Signup from \"./pages/Signup\";\n\nimport itemDetails from \"./pages/itemDetails\";\nimport Items from \"./pages/items\";\nimport Rooms from \"./pages/rooms\";\nimport about from \"./pages/about\";\n\n\n\n// see https://reacttraining.com/react-router/web/example/auth-workflow\n\nexport default function App() {\n\n\n\n\n  return (\n    // div here that is flex coloumn\n    <Router>\n      <Nav />\n      <Switch>\n        <ConnectedPublicRoute exact path=\"/\" component={Splash} />\n        <ConnectedPublicRoute path=\"/login\" component={Login} />\n        <ConnectedPublicRoute path=\"/signup\" component={Signup} />\n        <ConnectedPrivateRoute exact path=\"/books\" component={Books} />\n        <ConnectedPrivateRoute path=\"/books/:id\" component={Detail} />\n\n        <ConnectedPrivateRoute exact path=\"/items\" component={Items} />\n        <ConnectedPrivateRoute path=\"/items/:id\" component={itemDetails} />\n        <ConnectedPrivateRoute exact path=\"/rooms\" component={Rooms} />\n        <ConnectedPrivateRoute path=\"/about\" component={about} />\n\n\n        <Route path=\"*\"><NoMatch /></Route>\n      </Switch>\n\n    </Router>\n\n  );\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ component: Component, ...rest }) {\n\n  const [isOpen, setOpen] = useState(true)\n  const toggle = () => setOpen(!isOpen)\n\n  return (\n\n    <Route\n      {...rest}\n      render={routeProps =>\n        rest.user ? (\n          <div className=\"App wrapper\">\n            <SideBar toggle={toggle} isOpen={isOpen} />\n            <Content toggle={toggle} isOpen={isOpen} >\n              <Component {...routeProps} />\n            </Content>\n          </div>\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: routeProps.location }\n              }}\n            />\n          )\n      }\n    />\n\n  );\n}\n\nconst ConnectedPrivateRoute = connect(\n  // mapStateToProps\n  state => ({ user: state.user.details })\n)(PrivateRoute);\n\n// A wrapper for <Route> that redirects to the books \n// screen if you're authenticated.\nfunction PublicRoute({ component: Component, ...rest }) {\n\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !rest.user ? (\n          <Component {...routeProps} />\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/items\"\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nconst ConnectedPublicRoute = connect(\n  // mapStateToProps\n  state => ({ user: state.user.details })\n)(PublicRoute);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n/**\n * Wrapping our entire app in the react-redux Provider component\n * \n * The <Provider /> makes the Redux store available to any nested components that have been wrapped in the connect() function.\n * Since any React component in a React Redux app can be connected,\n * most applications will render a <Provider> at the top level,\n * with the entire app’s component tree inside of it.\n * Normally, you can’t use a connected component unless it is nested inside of a <Provider>.\n * \n * @see {@link https://react-redux.js.org/api/provider}\n */\nconst renderApp = () => render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n/**\n * Setting up hot module reloading for our components\n */\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./App', renderApp)\n}\nrenderApp()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}