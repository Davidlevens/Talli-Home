{"version":3,"sources":["redux/reducers/user.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","components/sidebar/SubMenu.js","components/sidebar/SideBar.js","components/content/Navbar.js","components/content/Content.js","pages/Splash.jsx","redux/actions.js","api/protectedAPI.js","api/index.js","components/Form/index.js","pages/Login/index.jsx","components/DeleteBtn/index.js","components/Jumbotron/index.js","components/Grid/index.js","components/List/index.js","pages/Books.js","pages/Detail.js","pages/NoMatch.js","components/Nav/index.js","pages/Signup/index.jsx","pages/itemDetails.js","pages/items.js","App.js","serviceWorker.js","index.js"],"names":["setUserDetails","jot","JotBrowser","getToken","firstName","getClaim","role","id","initialState","details","rootState","user","userState","combineReducers","state","action","type","payload","tokens","refresh","eject","refreshJot","configureStore","preloadedState","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","SubMenu","props","useState","collapsed","setCollapsed","icon","title","items","NavItem","onClick","className","classNames","NavLink","Collapse","isOpen","navbar","map","item","index","key","tag","Link","to","target","submenus","itle","SideBar","color","toggle","style","vertical","faHome","faBriefcase","faCopy","faImage","faQuestion","faPaperPlane","setOpen","Navbar","light","expand","Button","faAlignLeft","NavbarToggler","Container","fluid","children","Splash","Row","Col","Jumbotron","history","push","onLogin","onLogout","getBooks","axiosP","get","getBook","deleteBook","delete","saveBook","bookData","post","getItems","getItem","deleteItem","saveItem","itemData","axios","create","baseURL","getAuthHeaderAsync","valid","Promise","resolve","makeAuthHeader","token","then","res","data","success","reject","errors","Authorization","interceptors","request","use","config","a","async","source","CancelToken","authHeader","store","dispatch","cancel","cancelToken","headers","signup","newUser","login","credentials","protectedAPI","Input","TextArea","rows","FormBtn","float","marginBottom","ServerError","axiosError","response","errorObj","statusText","status","error","Alert","variant","name","message","schema","yup","username","required","password","connect","Modal","show","onHide","animation","size","aria-labelledby","centered","Header","closeButton","Title","Body","initialValues","validationSchema","onSubmit","values","formikBag","API","setErrors","setStatus","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Form","noValidate","Group","as","controlId","Label","Control","autoComplete","placeholder","onChange","onBlur","value","isInvalid","Feedback","disabled","DeleteBtn","tabIndex","height","clear","paddingTop","textAlign","split","join","List","ListItem","Books","books","author","synopsis","loadBooks","setState","catch","err","console","log","handleInputChange","event","handleFormSubmit","preventDefault","this","length","book","_id","Component","Detail","match","params","NoMatch","aria-label","Brand","href","lastName","email","min","itemDetails","location","description","Items","purchaseDate","purchasePrice","loadItems","App","ConnectedPublicRoute","exact","path","component","Login","Signup","ConnectedPrivateRoute","rest","render","routeProps","Content","pathname","from","Boolean","hostname","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bf6a2a0.chunk.js","sourcesContent":["/**\n * Reducers specify how the application's state changes in response to actions sent to the store.\n * Remember that actions only describe what happened, but don't describe how the application's state changes.\n * @see {@link https://redux.js.org/basics/reducers}\n * \n */\n\nimport { Browser as JotBrowser } from 'jwt-jot'\n\nimport { LOGIN, LOGOUT } from \"../actionTypes\";\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOGIN: {\n            new JotBrowser('jwt', action.payload.tokens.user);\n            new JotBrowser('refreshJwt', action.payload.tokens.refresh);\n            return {\n                ...state,\n                details: setUserDetails()\n            };\n        }\n        case LOGOUT: {\n            // remove all tokens from local storage\n            const jot = new JotBrowser('jwt');\n            if (jot.getToken()) jot.eject();\n            const refreshJot = new JotBrowser('refreshJwt');\n            if (refreshJot.getToken()) refreshJot.eject();\n\n            return {\n                ...state,\n                details: setUserDetails()\n            };\n        }\n        default:\n            return {\n                ...state,\n                details: setUserDetails()\n            };\n    }\n}\n\nconst setUserDetails = () => {\n    const jot = new JotBrowser('jwt');\n    return jot.getToken() ?\n        {\n            firstName: jot.getClaim('firstName'),\n            role: jot.getClaim('role'),\n            id: jot.getClaim('sub')\n        } :\n        null;\n}\nexport const initialState = {\n    details: setUserDetails()\n};","/**\n * Reducers specify how the application's state changes in response to actions sent to the store.\n * Remember that actions only describe what happened, but don't describe how the application's state changes.\n * @see {@link https://redux.js.org/basics/reducers}\n * \n * Here we are combinging two reducers into a single root reducer,\n * and also creating a rootState, which will be the initial state passed to the store.\n */\n\n\nimport { combineReducers } from \"redux\";   // @see {@link https://redux.js.org/api/combinereducers/}\nimport user, { initialState as userState } from \"./user\";\n\n\n/**\n * Create correctly setup initial state for root reducer\n */\nexport const rootState = {\n    user: userState\n};\n\n/**\n * Merging our separate reducers into one root reducer\n */\nexport default combineReducers({\n    user\n});","/**\n * Separate file for the declaration of action types, \n * just to keep concerns clean and clear.\n */\nexport const LOGIN  = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';","import { createStore } from \"redux\";\nimport rootReducer, { rootState } from \"./reducers\";\n\n\n/**\n * \n * @see {@link https://redux.js.org/api/createstore}\n */\nfunction configureStore(preloadedState) {\n\n    const store = createStore(\n        rootReducer,\n        preloadedState,\n        // allowing our store to be enhanced by the redux devtools (with which we can do time-travel and state inspection)\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n    // Setting up hot module reloading for our reducers\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\n        module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n    }\n\n    return store\n}\n\nexport default configureStore(rootState);","import React, { useState } from 'react';\nimport  { Collapse, NavItem, NavLink } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nconst SubMenu = props => {\n  \n  const [collapsed, setCollapsed] = useState(true)\n  const toggleNavbar = () => setCollapsed(!collapsed)\n  const { icon, title, items } = props;\n \n  return (\n    <div>\n      <NavItem onClick={toggleNavbar} className={classNames({'menu-open': !collapsed})}>\n        <NavLink className=\"dropdown-toggle\">\n          <FontAwesomeIcon icon={icon} className=\"mr-2\"/>{title}\n        </NavLink>\n      </NavItem>\n      <Collapse isOpen={!collapsed} navbar className={classNames('items-menu',{'mb-1': !collapsed})}>\n        {items.map((item, index) => (\n            <NavItem key={index} className=\"pl-4\">\n              <NavLink tag={Link} to={item.target}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n            ))}\n      </Collapse>\n    </div>\n  );\n}\n\nexport default SubMenu;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faBriefcase, faPaperPlane, faQuestion, faImage, faCopy } from '@fortawesome/free-solid-svg-icons';\nimport SubMenu from './SubMenu';\nimport { NavItem, NavLink, Nav } from 'reactstrap';\nimport classNames from 'classnames';\nimport {Link} from 'react-router-dom';\n\nconst SideBar = props => (\n    <div className={classNames('sidebar', {'is-open': props.isOpen})}>\n      <div className=\"sidebar-header\">\n        <span color=\"info\" onClick={props.toggle} style={{color: '#fff'}}>&times;</span>\n        <h3>Inventory List</h3>\n      </div>\n      <div className=\"side-menu\">\n        <Nav vertical className=\"list-unstyled pb-3\">\n          <p>Dashboard</p>\n          <SubMenu title=\"Home\" icon={faHome} items={submenus[0]}/>\n          <NavItem>\n            <NavLink tag={Link} to={'/about'}>\n              <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\"/>About\n            </NavLink>\n          </NavItem>\n          <SubMenu title=\"Pages\" icon={faCopy} items={submenus[1]}/>\n          <NavItem>\n            <NavLink tag={Link} to={'/pages'}>\n              <FontAwesomeIcon icon={faImage} className=\"mr-2\"/>Portfolio\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/faq'}>\n              <FontAwesomeIcon icon={faQuestion} className=\"mr-2\"/>FAQ\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/contact'}>\n              <FontAwesomeIcon icon={faPaperPlane} className=\"mr-2\"/>Contact\n            </NavLink>\n          </NavItem>\n        </Nav>        \n      </div>\n    </div>\n  );\n\n  const submenus = [\n    [\n      {\n        title: \"Home 1\",\n        target: \"Home-1\"\n      },\n      {\n        title: \"Home 2\",\n        target: \"Home-2\",        \n      },\n      {\n        itle: \"Home 3\",\n        target: \"Home-3\",      \n      }\n    ],\n    [\n      {\n        title: \"Books\",\n        target: \"/books\",          \n      },\n      {\n        title: \"Items\",\n        target: \"/items\",        \n      }\n    ]\n  ]\n  \n\nexport default SideBar;","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAlignLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Navbar, Button, NavbarToggler, Collapse, Nav, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nexport default props => {\n\n  const [isOpen, setOpen] = useState(true)\n  const toggle = () => setOpen(!isOpen)\n  \n  return (\n    <Navbar color=\"light\" light className=\"navbar shadow-sm p-3 mb-5 bg-white rounded\" expand=\"md\">\n      <Button color=\"info\" onClick={props.toggle}>\n        <FontAwesomeIcon icon={faAlignLeft}/>\n      </Button>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to={'/page-1'}>page 1</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/page-2'}>page 2</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/page-3'}>page 3</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/page-4'}>page 4</NavLink>\n          </NavItem>\n      </Nav>\n      </Collapse>\n    </Navbar>\n  );\n}","import React from 'react';\nimport classNames from 'classnames';\nimport { Container } from 'reactstrap';\nimport NavBar from './Navbar';\n// import { Switch, Route } from 'react-router-dom';\n\nexport default props => (\n    <Container fluid className={classNames('content', { 'is-open': props.isOpen })}>\n    <NavBar toggle={props.toggle} />\n        {props.children} \n        {/* <Switch>\n            <Route exact path=\"/\" component={() => \"Hello\"} />\n            <Route exact path=\"/about\" component={() => \"About\"} />\n            <Route exact path=\"/Pages\" component={() => \"Pages\"} />\n            <Route exact path=\"/faq\" component={() => \"FAQ\"} />\n            <Route exact path=\"/contact\" component={() => \"Contact\"} />\n            <Route exact path=\"/Home-1\" component={() => \"Home-1\"} />\n            <Route exact path=\"/Home-2\" component={() => \"Home-2\"} />\n            <Route exact path=\"/Home-3\" component={() => \"Home-3\"} />\n            <Route exact path=\"/Page-1\" component={() => \"Page-1\"} />\n            <Route exact path=\"/Page-2\" component={() => \"Page-2\"} />\n            <Route exact path=\"/page-1\" component={() => \"page-1\"} />\n            <Route exact path=\"/page-2\" component={() => \"page-2\"} />\n            <Route exact path=\"/page-3\" component={() => \"page-3\"} />\n            <Route exact path=\"/page-4\" component={() => \"page-4\"} />\n            <Route exact path=\"/pages/books\" component={() => \"Books\"} />\n            <Route path=\"/books/:id\" component={() => \"Detail\"} />\n            <Route exact path=\"/items\" component={() => \"Item\"} />\n            <Route path=\"/items/:id\" component={() => \"itemDetails\"} />\n        </Switch> */}\n       \n    </Container>\n)","import React from \"react\";\n// import './App.scss';\n\nimport { Button, Col, Row, Container, Jumbotron } from 'react-bootstrap';\n\nexport default function Splash(props) {\n    return (\n        <Container>\n            <Row>\n                <Col >\n                    <Jumbotron fluid className='mt-4'>\n                        <h1 className='text-center'>Inventory?</h1>\n                    </Jumbotron>\n                    <Row className=\"text-center\">\n                        <Col >\n                            <Button \n                            type=\"submit\" \n                            className=\"btn btn-success\" \n                            onClick={() => props.history.push('/signup')}\n                            >Signup</Button>\n                        </Col>\n                        <Col >\n                            <Button \n                            type=\"submit\" \n                            className=\"btn btn-success\"\n                            onClick={() => props.history.push('/login')}\n                            >Login</Button>\n                        </Col>\n                    </Row>\n                    <Jumbotron fluid className='mt-4'>\n                        <h1 className='text-center'>We got you covered!</h1>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    );\n}","import { LOGIN, LOGOUT } from \"./actionTypes\";\n\n/**\n * \n * Actions are payloads of information that send data from your application to your store.\n * They are the only source of information for the store.\n * @see {@link https://redux.js.org/basics/actions}\n */\n\n // Fill in the properties that need to be returned\n // in each action\nexport const onLogin = (tokens) => ({\n    type: LOGIN,\n    payload: {tokens}\n});\n\nexport const onLogout = () => ({\n    type: LOGOUT\n});","import axios from \"axios\";\nimport { Browser as JotBrowser } from 'jwt-jot'\n\nimport store from '../redux/store';\nimport { onLogout } from '../redux/actions';\n\nexport default {\n    // Gets all books\n    getBooks: function () {\n        return axiosP.get(\"/books\");\n    },\n    // Gets the book with the given id\n    getBook: function (id) {\n        return axiosP.get(\"/books/\" + id);\n    },\n    // Deletes the book with the given id\n    deleteBook: function (id) {\n        return axiosP.delete(\"/books/\" + id);\n    },\n    // Saves a book to the database\n    saveBook: function (bookData) {\n        return axiosP.post(\"/books\", bookData);\n    },\n    //–––––––––––––––––––– ITEMS ––––––––––––––––––––––\n    // Gets all items\n    getItems: function () {\n        return axiosP.get(\"/items\");\n    },\n    // Gets the item with the given id\n    getItem: function (id) {\n        return axiosP.get(\"/items/\" + id);\n    },\n    // Deletes the item with the given id\n    deleteItem: function (id) {\n        return axiosP.delete(\"/items/\" + id);\n    },\n    // Saves a book to the database\n    saveItem: function (itemData) {\n        return axiosP.post(\"/items\", itemData);\n    }\n\n};\n\n\nconst axiosP = axios.create({\n    baseURL: '/api/protected'\n});\n\n// https://www.npmjs.com/package/axios#interceptors\naxiosP.interceptors.request.use(\n    async function (config) {\n        const source = axios.CancelToken.source();\n        let authHeader;\n        try {\n            authHeader = await getAuthHeaderAsync();\n        } catch (error) {\n            store.dispatch(onLogout());\n            source.cancel(`Request canceled: ${error}`);\n            return { cancelToken: source.token };\n        }\n\n        config.headers = {\n            ...config.headers,\n            ...authHeader\n        }\n\n        return config;\n    }\n);\n\nfunction getAuthHeaderAsync() {\n    const jot = new JotBrowser('jwt');\n\n    if (jot.getToken() && jot.valid()) return Promise.resolve(makeAuthHeader(jot));\n\n    const refreshJot = new JotBrowser('refreshJwt');\n\n    if (!refreshJot.getToken()) return Promise.reject('Refresh token not found on client.');\n    if (!refreshJot.valid()) return Promise.reject('Refresh token not valid on client.');\n\n    return axios.post(\"/api/auth/refresh\", { token: refreshJot.getToken() })\n        .then(res => res.data)\n        .then(data => {\n            if (data.success) {\n                // save new tokens in localstorage\n                new JotBrowser('refreshJwt', data.tokens.refresh);\n                const jot = new JotBrowser('jwt', data.tokens.user);\n                return makeAuthHeader(jot);\n            } else {\n                return Promise.reject(data.errors.token);\n            }\n        });\n}\n\nfunction makeAuthHeader(jot) {\n    return { Authorization: 'Bearer ' + jot.getToken() };\n}","import axios from \"axios\";\n\nimport protectedAPI from './protectedAPI';\n\n\nexport default {\n  signup: function (newUser) {\n    return axios.post(\"/api/auth/signup\", newUser).then(res => res.data);\n  },\n\n  login: function (credentials) {\n    return axios.post(\"/api/auth/login\", credentials).then(res => res.data);\n  },\n  ...protectedAPI\n};\n\n","import React from \"react\";\nimport {Alert} from 'react-bootstrap';\n// import './App.scss';\n// @import \"./variables.scss\";\n\n// import \"moving-app/App.scss\";\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n\nexport function ServerError(props) {\n  const {axiosError} = props;\n\n  if (!axiosError || !axiosError.response) return null;\n\n  const {statusText, status} = axiosError.response;\n  let errorObj;\n\n  if (axiosError.response.data.error) {\n    // handle custom error sent back by server\n    errorObj = axiosError.response.data.error;\n  } else {\n    errorObj = axiosError;\n  }\n\n\n  return (\n<Alert variant='danger'>\n    {status} {statusText}<br />\n    Error Name: {errorObj.name}<br />\n    Error Message: {errorObj.message}\n  </Alert>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Col, Form, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { onLogin } from '../../redux/actions'\nimport API from '../../api'\nimport { ServerError } from '../../components/Form';\n\nconst schema = yup.object({\n    username: yup.string().required(),\n    password: yup.string().required()\n});\n\nconst Login = (props) => {\n\n    return <Modal\n        show={true}\n        onHide={() => props.history.push('/')}\n        animation={false}\n        size=\"lg\"\n        aria-labelledby=\"login-form\"\n        centered\n    >\n        <Modal.Header closeButton>\n            <Modal.Title id=\"login-form\">\n                Home Inventory Login\n        </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <h5 className=\"card-title\">Login to your homes current inventory</h5>\n            <Formik\n                initialValues={{ username: '', password: '' }}\n                validationSchema={schema}\n                onSubmit={async (values, formikBag) => {\n                    try {\n                        const data = await API.login(values);\n                        if (data.success) {\n                            props.onLogin(data.tokens);\n                        } else {\n                            formikBag.setErrors(data.errors);\n                        }\n                    } catch (err) {\n                        formikBag.setStatus(err);\n                    }\n                    return;\n                }}\n            >\n                {({\n                    status,\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <ServerError axiosError={status} />\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"username\">\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control\n                                        required\n                                        name='username'\n                                        autoComplete='username'\n                                        placeholder=\"Username\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.username}\n                                        isInvalid={!!errors.username}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.username && touched.username && errors.username}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"Password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        autoComplete='current-password'\n                                        required\n                                        name='password'\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                        isInvalid={!!errors.password}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.password && touched.password && errors.password}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</Button>\n                        </Form>\n                    )}\n            </Formik>\n            <Link className=\"link\" to=\"/signup\">Don't have an account? <span className=\"link-signup\">Signup</span></Link>\n        </Modal.Body>\n    </Modal>;\n\n};\n\nexport default connect(\n    // mapStateToProps\n    null,\n    // mapDispatchToProps\n    { onLogin }\n)(Login);\n\n","import React from \"react\";\n// import \"./App.scss\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗ \n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\n// import './App.scss';\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"none\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n// import './App.scss';\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n// import './App.scss';\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Books extends Component {\n  state = {\n    books: [],\n    title: \"\",\n    author: \"\",\n    synopsis: \"\"\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title && this.state.author) {\n      API.saveBook({\n        title: this.state.title,\n        author: this.state.author,\n        synopsis: this.state.synopsis\n      })\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Lets keep a record of your belongings</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <Input\n                value={this.state.author}\n                onChange={this.handleInputChange}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n              />\n              <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              />\n              <FormBtn\n                disabled={!(this.state.author && this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit item\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Items On My List</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {/* () => instead of function() */}\n                {this.state.books.map((book) => {\n                  return (\n                  <ListItem key={book._id}>\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                )})}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../api\";\n\nclass Detail extends Component {\n  state = {\n    book: {}\n  };\n  // Add code to get the book with an _id equal to the id in the route param\n  // e.g. http://localhost:3000/books/:id\n  // The book id for this route can be accessed using this.props.match.params.id\n\n  componentDidMount() {\n    API.getBook(this.props.match.params.id)\n    .then(res => {     \n      this.setState({book: res.data})\n    });\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {this.state.book.title} by {this.state.book.author}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <p>{this.state.book.synopsis}</p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/\">← Back to Authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport { connect } from 'react-redux'\nimport { Button, Navbar } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\n\nimport { onLogout } from '../../redux/actions'\n// import './App.scss';\nconst Nav = (props) => {\n  return   <Navbar className='navbar-expand-lg navbar-dark justify-content-left'>\n  <Navbar.Brand href=\"/\">Home Inventory</Navbar.Brand>\n  {\n    props.user ?\n      <Button onClick={props.onLogout}>Logout</Button> :\n      <Link to={\"/login\"}>\n        <Button className='btn btn-dark-success'>Login</Button>\n      </Link>\n  }\n</Navbar>;\n};\n\nexport default connect(\n  // mapStateToProps\n  state => ({user: state.user.details}),\n  // mapDispatchToProps\n  { onLogout }\n)(Nav);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Col, Form, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n// import './App.scss';\nimport { onLogin } from '../../redux/actions'\nimport API from '../../api'\nimport {ServerError} from '../../components/Form';\n\n\nconst schema = yup.object({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    email: yup.string().required().email(),\n    username: yup.string().required().min(3),\n    password: yup.string().required().min(8)\n});\n\n/**\n * \n * @param {*} props \n * \n * autocomplete names\n * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-autocomplete-given-name\n */\nconst Signup = (props) => {\n\n    return <Modal\n        show={true}\n        onHide={() => props.history.push('/')}\n        animation={false}\n        size=\"lg\"\n        aria-labelledby=\"signup-form\"\n        centered\n    >\n        <Modal.Header closeButton>\n            <Modal.Title id=\"signup-form\">\n                Your homes current inventory\n        </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <h5 className=\"card-title\">Signup to create your homes inventory</h5>\n            <Formik\n                initialValues={{ firstName: '', lastName: '', email: '', username:'', password: '' }}\n                validationSchema={schema}\n                onSubmit={async (values, formikBag) => {\n                    try {\n                        const data = await API.signup(values);\n                        if (data.success) {\n                            props.onLogin(data.tokens);\n                        } else {\n                            formikBag.setErrors(data.errors);\n                        }\n                    } catch (err) {\n                        formikBag.setStatus(err);\n                    }\n                    return;\n                }}\n            >\n                {({\n                    status,\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                                                        <ServerError axiosError={status} />\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"signupFirstName\">\n                                    <Form.Label>First name</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='given-name'\n                                        name='firstName'\n                                        type=\"text\"\n                                        placeholder=\"First name\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.firstName}\n                                        isInvalid={!!errors.firstName}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.firstName && touched.firstName && errors.firstName}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"signupLastName\">\n                                    <Form.Label>Last name</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='family-name'\n                                        name='lastName'\n                                        type=\"text\"\n                                        placeholder=\"Last name\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.lastName}\n                                        isInvalid={!!errors.lastName}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.lastName && touched.lastName && errors.lastName}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"signupEmail\">\n                                    <Form.Label>Email address</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='email'\n                                        name='email'\n                                        type=\"email\"\n                                        placeholder=\"Email address\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.email}\n                                        isInvalid={!!errors.email}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.email && touched.email && errors.email}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"username\">\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control\n                                        required\n                                        name='username'\n                                        autoComplete='username'\n                                        placeholder=\"Username\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.username}\n                                        isInvalid={!!errors.username}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.username && touched.username && errors.username}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"Password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        required\n                                        autoComplete='new-password'\n                                        name='password'\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                        isInvalid={!!errors.password}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.password && touched.password && errors.password}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</Button>\n                        </Form>\n                    )}\n            </Formik>\n            <Link className=\"link\" to=\"/login\">Already have an account? <span className=\"link-signup\">Login</span></Link>\n        </Modal.Body>\n    </Modal>;\n\n};\n\nexport default connect(\n    // mapStateToProps\n    null,\n    // mapDispatchToProps\n    { onLogin }\n)(Signup);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../api\";\n\nclass itemDetails extends Component {\n    state = {\n        item: {}\n    };\n    // Add code to get the item with an _id equal to the id in the route param\n    // e.g. http://localhost:3000/books/:id\n    // The item id for this route can be accessed using this.props.match.params.id\n\n    componentDidMount() {\n        API.getItem(this.props.match.params.id)\n            .then(res => {\n                this.setState({ item: res.data })\n            });\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1>\n                                {this.state.item.name} in {this.state.item.location}\n                            </h1>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-10 md-offset-1\">\n                        <article>\n                            <h1>Description</h1>\n                            <p>{this.state.item.description}</p>\n                        </article>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-2\">\n                        <Link to=\"/\">← Back to Items</Link>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default itemDetails;\n","import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Items extends Component {\n    state = {\n        // MUST MATCH \"itemSeed\" OBJECT IN \"seedDB.js\" file \n        name: [],\n        location: \"\",\n        description: \"\",\n        purchaseDate: \"\",\n        purchasePrice: \"\",\n        \n    };\n\n    componentDidMount() {\n        this.loadItems();\n    }\n\n    loadItems = () => {\n        API.getItems()\n            .then(res =>\n                this.setState({\n                    items: res.data, name: \"\", location: \"\", description: \"\", purchaseDate: \"\",\n                    purchasePrice: \"\"\n                })\n            )\n            .catch(err => console.log(err));\n    };\n\n    deleteItem = id => {\n        API.deleteItem(id)\n            .then(res => this.loadItems())\n            .catch(err => console.log(err));\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.name && this.state.location) {\n            API.saveItem({\n                name: this.state.name,\n                location: this.state.location,\n                description: this.state.description,\n                purchaseDate: this.state.purchaseDate,\n                purchasePrice: this.state.purchasePrice\n            })\n                .then(res => this.loadItems())\n                .catch(err => console.log(err));\n        }\n    };\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-6\">\n                        <Jumbotron>\n                            <h1>What are you moving?</h1>\n                        </Jumbotron>\n                        <form>\n                            <Input\n                                value={this.state.name}\n                                onChange={this.handleInputChange}\n                                name=\"name\"\n                                placeholder=\"Item Name (required)\"\n                            />\n                            <Input\n                                value={this.state.location}\n                                onChange={this.handleInputChange}\n                                name=\"location\"\n                                placeholder=\"Location (required)\"\n                            />\n                            <TextArea\n                                value={this.state.description}\n                                onChange={this.handleInputChange}\n                                name=\"description\"\n                                placeholder=\"Description (required)\"\n                            />\n                            <FormBtn\n                                disabled={!(this.state.name && this.state.location)}\n                                onClick={this.handleFormSubmit}\n                            >\n                                Add Item\n              </FormBtn>\n                        </form>\n                    </Col>\n                    <Col size=\"md-6 sm-12\">\n                        <Jumbotron>\n                            <h1>Item Tracker</h1>\n                        </Jumbotron>            \n                        {this.state.items && this.state.items.length ? (\n                            <List>\n                                {this.state.items.map(item => (\n                                    <ListItem key={item._id}>\n                                        <Link to={\"/items/\" + item._id}>\n                                            <strong>\n                                                {item.name} in {item.location}\n                                            </strong>\n                                        </Link>\n                                        <DeleteBtn onClick={() => this.deleteItem(item._id)} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        ) : (\n                                <h3>No Results to Display</h3>\n                            )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Items;\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport SideBar from './components/sidebar/SideBar';\nimport Content from './components/content/Content';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nimport Splash from \"./pages/Splash\";\nimport Login from './pages/Login';\nimport Books from \"./pages/Books\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Signup from \"./pages/Signup\";\n\nimport itemDetails from \"./pages/itemDetails\";\nimport Items from \"./pages/items\";\n\n\n\n// see https://reacttraining.com/react-router/web/example/auth-workflow\n\nexport default function App() {\n\n\n\n\n  return (\n    // div here that is flex coloumn\n    <Router>\n      <Nav />\n      <Switch>\n        <ConnectedPublicRoute exact path=\"/\" component={Splash} />\n        <ConnectedPublicRoute path=\"/login\" component={Login} />\n        <ConnectedPublicRoute path=\"/signup\" component={Signup} />\n        <ConnectedPrivateRoute exact path=\"/books\" component={Books} />\n        <ConnectedPrivateRoute path=\"/books/:id\" component={Detail} />\n\n        <ConnectedPrivateRoute exact path=\"/items\" component={Items} />\n        <ConnectedPrivateRoute path=\"/items/:id\" component={itemDetails} />\n\n\n        <Route path=\"*\"><NoMatch /></Route>\n      </Switch>\n\n    </Router>\n\n  );\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ component: Component, ...rest }) {\n\n  const [isOpen, setOpen] = useState(true)\n  const toggle = () => setOpen(!isOpen)\n\n  return (\n\n    <Route\n      {...rest}\n      render={routeProps =>\n        rest.user ? (\n          <div className=\"App wrapper\">\n            <SideBar toggle={toggle} isOpen={isOpen} />\n            <Content toggle={toggle} isOpen={isOpen} >\n              <Component {...routeProps} />\n            </Content>\n          </div>\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: routeProps.location }\n              }}\n            />\n          )\n      }\n    />\n\n  );\n}\n\nconst ConnectedPrivateRoute = connect(\n  // mapStateToProps\n  state => ({ user: state.user.details })\n)(PrivateRoute);\n\n// A wrapper for <Route> that redirects to the books \n// screen if you're authenticated.\nfunction PublicRoute({ component: Component, ...rest }) {\n\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !rest.user ? (\n          <Component {...routeProps} />\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/items\"\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nconst ConnectedPublicRoute = connect(\n  // mapStateToProps\n  state => ({ user: state.user.details })\n)(PublicRoute);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/**\n * Wrapping our entire app in the react-redux Provider component\n * \n * The <Provider /> makes the Redux store available to any nested components that have been wrapped in the connect() function.\n * Since any React component in a React Redux app can be connected,\n * most applications will render a <Provider> at the top level,\n * with the entire app’s component tree inside of it.\n * Normally, you can’t use a connected component unless it is nested inside of a <Provider>.\n * \n * @see {@link https://react-redux.js.org/api/provider}\n */\nconst renderApp = () => render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n/**\n * Setting up hot module reloading for our components\n */\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./App', renderApp)\n}\nrenderApp()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}